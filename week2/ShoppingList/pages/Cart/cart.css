/************ cart페이지 구현 **********/
#cartContainer{
  display: flex;
  flex-direction: column;
  align-items: center; /*테이블을 가운데에 배치하기 위해서*/
}

/*
  스크롤 생성을 위한 div.tableContainer !
  참고로 table 요소는 컨텐츠의 크기에 맞게 알아서 조절된다.
  다만, table의 크기를 고정하고 셀이 맞춰가거나
  아니면 특정 셀만 조금 크기를 조절하는 방법이 존재하긴 한다.
*/
.tableContainer {
  margin-top: 5vh;
  width:70vw;
  max-height: 60vh; /*40vh까진 스크롤 안 생기게 만듬*/

  overflow-y: scroll; /*tabel의 지정 height를 넘으면 scroll 생성*/

  border-collapse: collapse;
  border: 2px solid rgb(140 140 140);
  font-family: sans-serif;
  font-size: 0.8rem;
  letter-spacing: 1px;

  /*스크롤바도 스타일링하고 싶은데 그건 좀 나중에...*/
}



/* 사용안함 -> 
.tableContainer .cartTable{
  table-layout:fixed;
  width: 100%;
}
https://developer.mozilla.org/en-US/docs/Web/CSS/table-layout 
*/

/*
  셀 크기를 아무리 정해봤자, 결국 콘텐츠의 크기가 넘쳐나면 그만큼 늘어난다.
  그러나, 이를 조금 조절할 수 있는 방법은, 콘텐츠의 크기를 부모 요소의 크기를 따라가게
  width: 100%를 한 뒤, 셀의 width를 정해주는 것이다.
  아래의 경우 height는 일부로 정하지 않았는데, 만약 height를 설정한다면
  셀의 height가 셀 콘텐츠의 height 보다 클 땐 반영되고, 작을 땐 반영안된다.
  이 경우, img의 height: 100%로 해놓아서, 더 작게 해도 반영은 된다.
*/

/*구현 예시처럼 셀의 크기를 고정 시키는 방법은?*/
th,td {
  overflow: hidden;
  width: 16vw; /*일일히 다 재가면서 했는데,, 다른 방법은 없을까?*/
  height: 15vh;
  border: 1px solid rgb(160 160 160);
  padding: 8px 10px;
  text-align: center;
}

th.checkCol{
  width: 5vw;
}


.theadFix{
  position: sticky; /*사용하려면 부모태그에 height 값이 있어야 한다던데.. 왜 되는거지?*/
  top:0px;
  background-color: rgb(160 160 160);
}

.buyOrBack{
  position: relative; /*table요소가 커지면 그만큼 내려감*/
  top: 20vh;
}

.cartBtn{
  margin: 10px;
  display: inline-block;
  width: 5vw;

  border: #df30e2 1px solid;
  border-radius: 0.25rem;
}

.cartBtn:hover{
  background-color: pink;
}


.modalWrapper {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;

  position: fixed;
  top: 0; /*위에 딱 고정시킴.*/
  z-index: 1; /*더 앞에 나오도록 -> 근데 없어도 문제 없긴 함*/

  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0,0.5); /*반 투명.*/
}

.modal{
  position: relative;

  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: flex-start;

  width: 50%;
  height: 50%;
  background-color: white;
  
  

  border-radius: 0.45rem;
  /*중심으로 부터 시작되고, 흐림정도가 다른 2개의 box-shadow 효과를 레이어로 활용*/
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5), 0 0 40px rgba(66, 217, 55, 0.8);
}

#modalContent{
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;


  position: relative;
  top: 0; /*기본 맥락을 사용하기 위해 relative 활용*/

  width: 100%;
  height: 80%;
  overflow-y: scroll;
  
  /*코드 리뷰 받았던 거 다시 한번 사용해보기!*/
  border: 2px solid;
  border-image: linear-gradient(to bottom right, rgb(75, 207, 32), rgb(175, 205, 21), rgb(97, 161, 218));
  border-image-slice:1; /*border-image를 얼마나 잘라 쓸지*/
}

.closeDiv{
  position: relative; /* 참고- fixed와 absolute의 차이 : 뷰포트 기준인지 부모 기준인지*/
  right: 0.1em;

  width: 100%; 
  height: 1.5em;
  display: flex; 
  justify-content: flex-end;

  
}

.payDiv{
  position: relative;
  bottom: 0.5em;

  width: 100%; 
  display: flex; 
  justify-content: center;

  
}

.fa-square-xmark{

  font-size: 1.5em;
  cursor: pointer;
}

.rowFlexDiv{
  position: relative;

  display: flex;
  flex-direction: row;
  flex-wrap: nowrap; 
  justify-content: space-between;
  align-items: center;
  

  margin: 5px;
  
  width: 98%;
  height: 25%;
  border: 1px solid red;
}

#modalContent .rowFlexDiv img{
  width: 15%;

  border: 1px solid wheat;
}

.cartItemP{
  
  
  text-align: center;
  align-content: center; /*align-items와는 좀 다르다. 기능 자체나, 사용 방법이나..*/
}

#cartItemPrice{
  align-self:flex-end;
  /*align-self 속성을 활용하여 해결! 나중엔 그리드도 좀 연습해봐야겠다.*/
  /*position: absolute; 이거 화면 창 줄이면 겹쳐지는 문제 발생하는데 어떻게 해결하지?
  bottom: 0;
  right: 1em;
  */
  margin-right: 10px;
  margin-bottom: 5px;
  border: 1px dotted black;
  background-color: white;
}

#payBtn{
  border-radius: 0.25rem;
  width: 10%;
}

#payBtn:hover{
  background-color: pink;
}