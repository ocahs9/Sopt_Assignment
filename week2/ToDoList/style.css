/*
  1. 섹션의 이름을 동일한 높이에 해두고 싶은데, 왜 completed가 좀 더 밑에 있는지 모르겠음.
  flex 박스의 보라색 빗금친 부분이 더 많음 -> justify-content: flex-start; 로 하면 해결. (아무 생각 없이 center로 해서 자동 계산된 거였음)
  2. 그림자 효과도 사용해보기
  3. 글씨체 적용해보기
  4. 반응형으로 구현해보기(브라우저 줄여도 겹쳐지지 않게)
  5. JS 적용하여 실제로 추가하게 만들고, 나중에는 V 버튼 추가하여 Completed로 넘어가는 코드 구현해보기
  
*/


*{
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
body{
  background: linear-gradient(to right, #000000, #c0c0c0);
 /*body는 전체 문서의 크기이긴 하지만.. 
  딱 요소들이 있는 만큼만 차지한다(따로 정하지 않으면)
  그러나, background로 적용하면 전체에 적용된다. - 개념상 보이는 부분이 전부 body인 듯.
  따라서, body의 최소값 = 보이는 곳 이라고 생각하는 게 좋을 듯 하다.
 */
}
a{
  text-decoration: none;
}
ul{
  list-style: none;
}
button{
  cursor: pointer; /*기본적으로 모든 버튼은 클릭할 수 있다는 것을 알린다*/
}
.fa-plus{
  font-weight: 900;
  font-size: 15px;
}

body > header > h1 > span#mainTitle{
  display: inline-block;
  width: 30%;
  border: 3px silver solid;
  border-radius: 0.25em;
  
  background: radial-gradient(circle, #f5f5f5, #d3d3d3, #e0e0e0, #d3d3d3);
  font-family: "Grandiflora One", cursive; /*웹 폰트 적용*/

}


/*******************************
 header 구현
********************************/
header{
  display: flex;
  flex-direction: row;
  flex-wrap: wrap; /*이거 안해주면 내가 상상한대로 요소의 크기가 안잡힐 수도 있다*/
  justify-content: center;
  align-items: center;

  width: 100vw;
  height: 20vh;

}

header > h1 {
  width: 100%; /*옆에 못 오게 만듬*/
  text-align: center;  
}

header > form#toDoForm {
  /*무엇도 작성할 필요 없음*/
}

header > form#toDoForm input{
  border: 3px solid red; /*아쉽게도 그라데이션을 border에 직접 적용은 불가능하다*/
  width:20vw;
  height: 5vh;

  padding-left: 8px; /*입력란에 너무 달라붙지 않도록*/
}




header > form#toDoForm input:focus{
  outline: none; /*기본적으로 focus하면 테두리가 검은색으로 돌아감*/
}

header > form#toDoForm > #toDoAdd
{
  width: 5vw;
  height: 5vh;
  border: 3px solid pink;
  background-color: pink;

  border-radius: 0.75em;
}
/*******************************
 header 구현 끝
********************************/


/*******************************
 main 구현
********************************/
main{
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap; /*명시*/

  justify-content: center;

  /*height: 100%; 그냥 부모요소 따라가게 만듬 (크기 조절될 수 있으니)
    그러나 직계부모가 body라서 큰 의미 없음.
  */


}

main > section.todoSection{
  
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: center;
  
  /*width 50%면 서로 너무 먼 느낌, margin-top 없으면 너무 붙어있는 느낌*/
  margin-top: 5vh;
  width: 30%;
 

}

main > section.todoSection h2.sectionName{
  /*justify-self: flex-start; 어차피 flex templete이라 무시당함*/ 
  position: relative;
  top:5px; 
  color: red;
  margin-bottom: 20px;
}



main > section.todoSection > ul > li {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  flex-wrap: nowrap; /*안넘어가게 만들어서 요소 간 크기 조절*/

  width: 300px;
  height: 40px;

  margin-bottom: 10px;

  border: 3px solid black;
  border-radius: 1.25em;
  
  
  
}


.toDoList{
  animation: scaling 2s infinite linear;
}

.toDoList li{
  background: linear-gradient(to right, #ff007f, #c0c0c0);
}

.doneList{
  
  animation: blur 2s infinite linear;
}

.doneList li{
  background-color: rgba(0, 0, 0, 0.3); /* 배경색: 블랙 */
  box-shadow: 0 0 20px rgba(255, 0, 127, 0.5), 0 0 40px rgba(192, 192, 192, 0.8);
}

@keyframes blur{
  from{
    opacity: 1;
  }
  50%{
    opacity: 0.1;
  }
  to{
    opacity: 1;
  }
}


@keyframes scaling{
  0%{
    transform: scale(1);
  }

  50%{
    transform: scale(1.05);
  }
  100%{
    transform: scale(1);
  }
}

li button{
  border-radius: 1.25em;
  width: 10%;

  margin-right: 5px;
}

li button:hover{
  color:red;
}

@font-face {
  font-family: 'Orbit'; /*폰트 이름은 내 맘대로*/
  /*format도 알려줌으로써, 브라우저가 적용할 수 있는 타입일 때만 다운로드하게 유도*/
  src: url('./fonts/Orbit/Orbit-Regular.ttf') format('truetype'); 
}

/*웹에서 다운로드 받아온 폰트 적용 연습*/
li span.listText{
  display: inline-block; 
  width: 240px;

  margin-left: 10px;
  font-family: 'Orbit', 'recursive';

  white-space: nowrap; /*줄바꿈 방지 - 다른 속성값은 어떻게 줄바꿈(혹은 공백처리)할 것인가의 문제*/
  overflow: hidden; /* 오버플로시 기본적으로 가려져야함*/
  text-overflow: ellipsis; /*... 으로 나타나게 함*/
  /*만약, text-overflow를 위의 2개 속성 정의 없이 사용하면
    원하는대로 동작하지 않는다.(자동 개행, 오버플로우시 문자 나타나면서 ...됨)
    
    추가로, word-break, overflow-wrap, hyphens 속성은 어떤 식으로 개행할지를 정하는 속성
    그리고 만약, 2줄 이상에서 ...하고 싶으면 web-kit을 쓰는 조금 다른 방법이 있다.
  */
}

li button.cancel{
  display: inline-block;
  width: 30px;
}






/*******************************
 main 구현 끝
********************************/
